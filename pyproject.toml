[tool.poetry]
name = "KoggerSplitter"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "3.9.*"
google-api-python-client = "^2.31.0"
types-protobuf = "^3.18.1"
pyzmq = "^22.3.0"
Pillow = "^8.4.0"
mypy-protobuf = "^3.0.0"
numpy = "^1.21.4"
opencv-python = "^4.5.4"
tensorflow = "^2.7.0"
PyQt5 = "^5.15.6"
psutil = "^5.8.0"
pywin32 = "^302"

[tool.poetry.dev-dependencies]
autoflake = "^1.4"
black = "^21.11b1"
mypy = "^0.910"
taskipy = "^1.9.0"
isort = "^5.10.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.6"
strict = true

[tool.taskipy.settings]
use_vars = true

[tool.taskipy.variables]
SRC_DIR = "autosplit/"
PXX = "py"

PROTOC = "\"deps/protoc-3.19.1-win64/bin/protoc.exe\""
MYPY_PROTOC = "deps/mypy-protobuf/mypy_protobuf/protoc_gen_mypy.bat"
PROTO_SRC_PATH = "autosplit/network/message/protobuf/"
PROTO_OUT_PATH = "autosplit/network/message/"
PROTO_SRCS = "autosplit/network/message/protobuf/frame.proto autosplit/network/message/protobuf/pineapple_result.proto"
PROTO_OUTPUT = ".\\autosplit\\network\\message\\frame_pb2.py, .\\autosplit\\network\\message\\frame_pb2.pyi, .\\autosplit\\network\\message\\pineapple_result_pb2.py, .\\autosplit\\network\\message\\pineapple_result_pb2.pyi"

AUTOFLAKE_FLAGS = "-r --remove-all-unused-imports --remove-duplicate-keys --remove-unused-variables --in-place"

[tool.taskipy.tasks]
compile = "{PROTOC} --plugin={MYPY_PROTOC} --proto_path={PROTO_SRC_PATH} --python_out={PROTO_OUT_PATH} --mypy_out={PROTO_OUT_PATH} {PROTO_SRCS}"
clean = "\"bin/clean.cmd\" {PROTO_OUTPUT}"

lint = "task lint_mypy && task lint_autoflake && task lint_isort && task lint_black"
lint_mypy = "mypy {SRC_DIR}"
lint_autoflake = "autoflake {SRC_DIR} {AUTOFLAKE_FLAGS} --check"
lint_isort ="isort {SRC_DIR} --diff"
lint_black = "black {SRC_DIR} --check"

format = "task format_autoflake && task format_isort && task format_black"
format_autoflake = "autoflake {SRC_DIR} {AUTOFLAKE_FLAGS} --in-place"
format_isort ="isort {SRC_DIR}"
format_black ="black {SRC_DIR}"

test = "{PXX} -m unittest discover {SRC_DIR}"
